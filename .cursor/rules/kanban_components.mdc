---
description: 
globs: 
alwaysApply: true
---
# Kanban Component Structure

The Kanban board functionality is built using several key React components:

*   **`[src/App.js](mdc:src/src/App.js)`**: The main application component. It initializes `useKanbanManager` and renders the `Header` and `KanbanBoard` based on the application state (e.g., whether boards exist, splash screen is active).

*   **`[src/components/KanbanBoard.js](mdc:src/src/components/KanbanBoard.js)`**: This component is responsible for rendering the overall Kanban board structure. It uses `DndContext` from `@dnd-kit/core` to enable drag-and-drop functionality for tasks. It maps over column configurations and renders a `Column` component for each.
    *   Manages `activeTaskId` for the `DragOverlay`.
    *   Handles `handleDragStart`, `handleDragEnd`, and `handleDragCancel` to update task statuses and order via the `setTasksForActiveBoard` action.

*   **`[src/components/Column.js](mdc:src/src/components/Column.js)`**: Represents a single column in the Kanban board (e.g., "To Do", "In Progress", "Done").
    *   Uses `useDroppable` to allow tasks to be dropped into it.
    *   Uses `SortableContext` from `@dnd-kit/sortable` to manage the sortable list of tasks within the column.
    *   Renders `TaskCard` components for each task in that column.
    *   Includes functionality for adding new tasks directly to the column (`quickAddInputRef`).

*   **`[src/components/TaskCard.js](mdc:src/src/components/TaskCard.js)`**: Represents an individual task card.
    *   Uses `useSortable` to make the task card draggable.
    *   Displays task text and due date.
    *   Allows editing of the due date and deletion of the task.
    *   Applies specific styles when being dragged (`isDragging`) or when rendered in the `DragOverlay` (`isDraggingOverlay`).

*   **`[src/components/Header.js](mdc:src/src/components/Header.js)`**: The application header.
    *   Displays controls for board selection, renaming, deletion, and creation.
    *   Displays controls for phase selection, renaming, deletion, and creation within the active board.
    *   Allows loading tasks from a Markdown file.
    *   Contains the theme toggle switch and an info modal button.

*   **`[src/components/AddTaskForm.js](mdc:src/src/components/AddTaskForm.js)`**: (Note: This component seems to be present but not directly used or imported in `App.js` or `KanbanBoard.js` in the provided files. The `Column` component has its own inline quick add form.) If it were used, it would provide a form to add new tasks.

*   **`[src/components/SplashScreen.js](mdc:src/src/components/SplashScreen.js)`**: A splash screen component displayed on initial load.

*   **`[src/components/InfoModal.js](mdc:src/src/components/InfoModal.js)`**: A modal that provides information on how to use the Markdown import feature.

## Drag and Drop:

The application uses `@dnd-kit` for drag-and-drop functionality:
*   `DndContext` wraps the `KanbanBoard`.
*   `useSortable` is used in `TaskCard` to make tasks draggable and sortable.
*   `useDroppable` is used in `Column` to define columns as drop targets.
*   `DragOverlay` is used in `KanbanBoard` to render a custom preview of the task being dragged.
